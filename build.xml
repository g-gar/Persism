<?xml version="1.0" encoding="UTF-8"?>
<project name="persism" default="build">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
        <exclude name="**/.sbas/**"/>
        <exclude name="**/.IJI.*/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin" value="${jdk.home}/bin"/>
    <path id="jdk.classpath">
        <fileset dir="${jdk.home}">
            <include name="jre/lib/alt-rt.jar"/>
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunmscapi.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home}"/>
    <property name="project.jdk.bin" value="${jdk.bin}"/>
    <property name="project.jdk.classpath" value="jdk.classpath"/>


    <!-- Project Libraries -->
    <path id="library.junit.classpath">
        <pathelement location="${basedir}/libs/junit3.8.1/junit.jar"/>
    </path>

    <path id="library.logging.classpath">
        <pathelement location="${basedir}/libs/log4j/log4j.jar"/>
        <pathelement location="${basedir}/libs/logback-1.0.1/logback-access-1.0.1.jar"/>
        <pathelement location="${basedir}/libs/logback-1.0.1/logback-classic-1.0.1.jar"/>
        <pathelement location="${basedir}/libs/logback-1.0.1/logback-core-1.0.1.jar"/>
        <pathelement location="${basedir}/libs/logback-1.0.1/slf4j-api-1.6.4.jar"/>
        <pathelement location="${basedir}/libs/log4jdbc/log4jdbc3-1.2.jar"/>
    </path>

    <!-- JDBC DRIVERS -->
    <path id="library.derby.classpath">
        <pathelement location="${basedir}/libs/db-derby-10.8.2.2-lib/lib/derby.jar"/>
        <pathelement location="${basedir}/libs/db-derby-10.8.2.2-lib/lib/derbyrun.jar"/>
    </path>


    <path id="library.h2.classpath">
        <pathelement location="${basedir}/libs/h2/bin/h2-1.3.167.jar"/>
    </path>

    <path id="library.jtds.classpath">
        <pathelement location="${basedir}/libs/jtds-1.2.5/jtds-1.2.5.jar"/>
    </path>

    <path id="library.mssql.classpath">
        <pathelement location="${basedir}/libs/mssql/sqljdbc4.jar"/>
    </path>

    <path id="library.oracle.classpath">
        <pathelement location="${basedir}/libs/oracle/ojdbc6.jar"/>
    </path>

    <path id="library.sqlite.classpath">
        <pathelement location="${basedir}/libs/sqlite/sqlite-jdbc-3.7.2.jar"/>
    </path>

    <path id="library.mysql.classpath">
        <pathelement location="${basedir}/libs/mysql-connector-java-5.1.20/mysql-connector-java-5.1.20-bin.jar"/>
    </path>

    <path id="library.postgresql.classpath">
        <pathelement location="${basedir}/libs/postgresql/postgresql-9.1-902.jdbc4.jar"/>
    </path>

    <path id="library.pool.classpath">
        <pathelement location="${basedir}/libs/commons-pool-1.5.4/commons-pool-1.5.4.jar"/>
        <pathelement location="${basedir}/libs/commons-dbcp-1.4/commons-dbcp-1.4.jar"/>
    </path>

    <!-- Global Libraries -->


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module Persism -->

    <dirname property="project.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.persism" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.persism" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.persism" value="${project.jdk.classpath}"/>

    <property name="compiler.args.persism" value="${compiler.args}"/>

    <property name="prod.dist.dir" value="${project.basedir}/distprod"/>
    <property name="test.dist.dir" value="${project.basedir}/disttest"/>
    <property name="coverage.report.dir" value="${project.basedir}/reports"/>
    <property name="instrumented.classes.dir" value="${project.basedir}/instrumented-classes"/>
    <property name="release.dir" value="${project.basedir}/release"/>
    <property name="src.dir" value="${project.basedir}/src"/>


    <path id="persism.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="persism.module.production.classpath">
        <path refid="${module.jdk.classpath.persism}"/>
        <path refid="library.junit.classpath"/>
        <path refid="library.jtds.classpath"/>
        <path refid="library.oracle.classpath"/>
        <path refid="library.h2.classpath"/>
        <path refid="library.sqlite.classpath"/>
        <path refid="library.mysql.classpath"/>
        <path refid="library.postgresql.classpath"/>
        <path refid="library.logging.classpath"/>
        <path refid="library.pool.classpath"/>
    </path>

    <path id="persism.runtime.production.module.classpath">
        <pathelement location="${prod.dist.dir}"/>
        <path refid="library.junit.classpath"/>
        <path refid="library.jtds.classpath"/>
        <path refid="library.oracle.classpath"/>
        <path refid="library.h2.classpath"/>
        <path refid="library.sqlite.classpath"/>
        <path refid="library.mysql.classpath"/>
        <path refid="library.postgresql.classpath"/>
        <path refid="library.logging.classpath"/>
        <path refid="library.pool.classpath"/>
    </path>

    <path id="persism.module.classpath">
        <path refid="${module.jdk.classpath.persism}"/>
        <pathelement location="${prod.dist.dir}"/>
        <path refid="library.junit.classpath"/>
        <path refid="library.logging.classpath"/>
        <path refid="library.pool.classpath"/>

        <path refid="library.jtds.classpath"/>
        <path refid="library.oracle.classpath"/>
        <path refid="library.h2.classpath"/>
        <path refid="library.sqlite.classpath"/>
        <path refid="library.mysql.classpath"/>
        <path refid="library.derby.classpath"/>
        <path refid="library.mssql.classpath"/>
        <path refid="library.postgresql.classpath"/>
    </path>

    <path id="persism.runtime.module.classpath">
        <pathelement location="${test.dist.dir}"/>
        <pathelement location="${prod.dist.dir}"/>
        <path refid="library.junit.classpath"/>
        <path refid="library.logging.classpath"/>
        <path refid="library.pool.classpath"/>

        <path refid="library.jtds.classpath"/>
        <path refid="library.oracle.classpath"/>
        <path refid="library.h2.classpath"/>
        <path refid="library.sqlite.classpath"/>
        <path refid="library.derby.classpath"/>
        <path refid="library.mysql.classpath"/>
        <path refid="library.postgresql.classpath"/>
    </path>


    <patternset id="excluded.from.module.persism">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.persism">
        <patternset refid="excluded.from.module.persism"/>
    </patternset>

    <path id="persism.module.sourcepath">
        <dirset dir="${project.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="persism.module.test.sourcepath">
        <dirset dir="${project.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile" depends="compile.prod,compile.test"
            description="Compile module persism"/>

    <target name="compile.prod" description="Compile module persism; production classes">
        <mkdir dir="${prod.dist.dir}"/>
        <javac destdir="${prod.dist.dir}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.persism}/javac"
               debug="true" debuglevel="vars,lines,source">

            <compilerarg line="${compiler.args.persism}"/>
            <bootclasspath refid="persism.module.bootclasspath"/>
            <classpath refid="persism.module.production.classpath"/>
            <src refid="persism.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.persism"/>
        </javac>

        <copy todir="${prod.dist.dir}">
            <fileset dir="${project.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.test" depends="compile.prod"
            description="compile module persism; test classes" unless="skip.tests">
        <mkdir dir="${test.dist.dir}"/>
        <javac destdir="${test.dist.dir}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.persism}/javac"
               debug="true" debuglevel="vars,lines,source">
            <compilerarg line="${compiler.args.persism}"/>
            <bootclasspath refid="persism.module.bootclasspath"/>
            <classpath refid="persism.module.classpath"/>
            <src refid="persism.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.persism"/>
        </javac>

        <copy todir="${test.dist.dir}">
            <fileset dir="${project.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" description="clean all">
        <delete dir="${prod.dist.dir}"/>
        <delete dir="${test.dist.dir}"/>
        <delete dir="${coverage.report.dir}"/>
        <delete dir="${instrumented.classes.dir}"/>
        <delete dir="${release.dir}"/>
    </target>


    <target name="build" depends="init, clean, compile" description="build all modules">
    </target>

    <target name="javadoc" description="Generate Javadoc">
        <mkdir dir="${project.basedir}/javadoc"/>

        <!--        stylesheetfile="${project.basedir}/persism.css"-->

        <javadoc
                sourcepathref="persism.module.sourcepath"
                destdir="${project.basedir}/javadoc"
                linksource="true"
                overview="overview.html"
                doctitle="Persism API"
                author="Daniel Howard"
                description="DESCRRIOTIUONB?"
                footer="FOOTER?"
                group="GHROUPO?"
                header="HEADER?"
                windowtitle="Persism"
        >
        </javadoc>
    </target>

    <target name="release" depends="build, javadoc" description="build all">
        <tstamp/>

        <mkdir dir="${release.dir}"/>
        <jar destfile="${release.dir}/persism-${release.version}.jar">

            <manifest id="${release.version}">
                <attribute name="Built-By" value="Dan Howard"/>
                <section name="Persism">
                    <attribute name="Specification-Title" value="Persism"/>
                    <attribute name="Specification-Version" value="${release.version}"/>
                    <attribute name="Implementation-Title" value="Persism"/>
                    <attribute name="Implementation-Version" value="${release.version} ${TODAY}"/>
                </section>
            </manifest>

            <fileset dir="${prod.dist.dir}">
                <!-- package html files-->
                <exclude name="**/*package.html"/>
            </fileset>
        </jar>

        <jar destfile="${release.dir}/persism-${release.version}-src.jar">

            <manifest id="${release.version}">
                <attribute name="Built-By" value="Dan Howard"/>
                <section name="Persism">
                    <attribute name="Specification-Title" value="Persism"/>
                    <attribute name="Specification-Version" value="${release.version}"/>
                    <attribute name="Implementation-Title" value="Persism"/>
                    <attribute name="Implementation-Version" value="${release.version} ${TODAY}"/>
                </section>
            </manifest>

            <fileset dir="${project.basedir}/src"/>
        </jar>

        <jar destfile="${release.dir}/persism-${release.version}-doc.jar">

            <manifest id="${release.version}">
                <attribute name="Built-By" value="Dan Howard"/>
                <section name="Persism">
                    <attribute name="Specification-Title" value="Persism"/>
                    <attribute name="Specification-Version" value="${release.version}"/>
                    <attribute name="Implementation-Title" value="Persism"/>
                    <attribute name="Implementation-Version" value="${release.version} ${TODAY}"/>
                </section>
            </manifest>

            <fileset dir="${project.basedir}/javadoc"/>
        </jar>

        <copy file="${project.basedir}/readme.txt" tofile="${release.dir}/readme.txt"/>
        <copy file="${project.basedir}/license.txt" tofile="${release.dir}/license.txt"/>

        <zip destfile="${release.dir}/persism-${release.version}.zip">
            <fileset dir="${release.dir}">
                <include name="**/*"/>
            </fileset>
        </zip>

        <zip destfile="${release.dir}/persism-build-${release.version}.zip">
            <fileset dir="${project.basedir}">
                <include name="src/**/*"/>
                <include name="test/**/*"/>
                <include name="build.properties"/>
                <include name="build.xml"/>
                <include name="readme.txt"/>
                <include name="build.txt"/>
                <include name="license.txt"/>
            </fileset>
        </zip>
    </target>

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.home}">
            <include name="cobertura.jar"/>
            <include name="lib/**/*.jar"/>
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="instrument" depends="build" description="Instrumentation for JUNIT">

        <delete file="${basedir}/cobertura.ser" failonerror="false"/>

        <cobertura-instrument todir="${project.basedir}/instrumented-classes">
            <fileset dir="${prod.dist.dir}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>

        <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
            <!--
           Specify the name of the coverage data file to use.
           The value specified below is the default.
            -->
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser"/>

            <classpath refid="library.junit.classpath"/>
            <!--
            The instrumented classes reference classes used by the
            Cobertura runtime, so Cobertura and its dependencies
            must be on your classpath.
            -->
            <classpath refid="cobertura.classpath"/>


            <!--
            Note the classpath order: instrumented classes are before the
            original (uninstrumented) classes.  This is important.
            -->
            <classpath location="${project.basedir}/instrumented-classes"/>
            <classpath location="${prod.dist.dir}"/>
            <classpath location="${test.dist.dir}"/>

            <classpath refid="persism.module.classpath"/>

            <formatter type="brief" usefile="false"/>
            <test name="net.sf.persism.AllTests"/>
        </junit>

        <cobertura-report format="html" destdir="${coverage.report.dir}">
            <fileset dir="${project.basedir}/src"/>
        </cobertura-report>

    </target>

</project>